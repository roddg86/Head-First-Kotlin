fun main(args: Array<String>) {
    /* создадим два обьекта данных на основе класса данных Recipe*/
    val r1 = Recipe("Тайский карри", false)
    val r2 = Recipe("Тайский карри", false)

    /* создание копии обьекта r1 и изменение его свойства title, по итогу получаем новый обьект */
    val r3 = r1.copy(title = "Куринная бхуна")

    println("r1 hash code: ${r1.hashCode()}")
    println("r2 hash code: ${r2.hashCode()}")
    println("r3 hash code: ${r3.hashCode()}")

    /* == проверяет эквивалентность объектов. */
    /* Условие r1 == r2 истинно, потому что их объекты имеют одинаковые значения */
    println("r1 == r2? ${r1 == r2}")

    /* === проверяет тождественность объектов.
    * Оператор === всегда проверяет, ссылаются ли две переменные на один объект.*/
    /* так как переменные содержат ссылки на разные объекты, условие r1 === r2 ложно. */
    println("r1 === r2? ${r1 === r2}")

    println("r1 == r3? ${r1 == r3}")

    /* Деструктуризацией объекта данных называется разбиение
    его на компоненты */
    /* Деструктуризация r1 */
    val (title, vegetarian) = r1
    println("title is $title and vegetarian is $vegetarian")
}